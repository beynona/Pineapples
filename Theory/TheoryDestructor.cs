namespace Pineapple_Educate;

public class TheoryDestructor : IDisposable
{
    // Конструктора класса - при инициализации экземпляра класса
    public TheoryDestructor() { }
    
    // Деструктор класса (финализатор)
    // Вызывается когда экземпляр класса уничтожается (очищается) из памяти.
    // По сути дополнительное поведение перед тем, как наш объект будет уничтожен.
    // Например: при работе с потоком мы можем определить корректное закрытие потока, чтобы не потерять данные
    ~TheoryDestructor() { }
    
    // Если мы хотим вручную вызывать уничтожение класса без деструктора
    // Необходимо для работы экземпляра класса внутри конструкции using
    public void Dispose()
    {
        GC.Collect();
    }
}

class DisposablePractice
{
    private void UseNewInMethod()
    {
        // Работа с классом без создания экземпляра. Для работы необходима реализация IDisposable у вызываемого класса
        using (var c = new TheoryDestructor())
        {
            
        }
    }
}